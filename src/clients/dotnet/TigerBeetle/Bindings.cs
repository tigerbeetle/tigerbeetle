//////////////////////////////////////////////////////////
// This file was auto-generated by dotnet_bindings.zig  //
//              Do not manually modify.                 //
//////////////////////////////////////////////////////////

using System;
using System.Runtime.InteropServices;

namespace TigerBeetle;

[Flags]
public enum AccountFlags : ushort
{
    None = 0,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#flagslinked
    /// </summary>
    Linked = 1 << 0,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#flagsdebits_must_not_exceed_credits
    /// </summary>
    DebitsMustNotExceedCredits = 1 << 1,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#flagscredits_must_not_exceed_debits
    /// </summary>
    CreditsMustNotExceedDebits = 1 << 2,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#flagshistory
    /// </summary>
    History = 1 << 3,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#flagsimported
    /// </summary>
    Imported = 1 << 4,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#flagsclosed
    /// </summary>
    Closed = 1 << 5,

}

[Flags]
public enum TransferFlags : ushort
{
    None = 0,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#flagslinked
    /// </summary>
    Linked = 1 << 0,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#flagspending
    /// </summary>
    Pending = 1 << 1,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#flagspost_pending_transfer
    /// </summary>
    PostPendingTransfer = 1 << 2,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#flagsvoid_pending_transfer
    /// </summary>
    VoidPendingTransfer = 1 << 3,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#flagsbalancing_debit
    /// </summary>
    BalancingDebit = 1 << 4,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#flagsbalancing_credit
    /// </summary>
    BalancingCredit = 1 << 5,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#flagsclosing_debit
    /// </summary>
    ClosingDebit = 1 << 6,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#flagsclosing_credit
    /// </summary>
    ClosingCredit = 1 << 7,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#flagsimported
    /// </summary>
    Imported = 1 << 8,

}

[Flags]
public enum AccountFilterFlags : uint
{
    None = 0,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#flagsdebits
    /// </summary>
    Debits = 1 << 0,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#flagscredits
    /// </summary>
    Credits = 1 << 1,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#flagsreversed
    /// </summary>
    Reversed = 1 << 2,

}

[Flags]
public enum QueryFilterFlags : uint
{
    None = 0,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/query-filter#flagsreversed
    /// </summary>
    Reversed = 1 << 0,

}

[StructLayout(LayoutKind.Sequential, Size = SIZE)]
public struct Account
{
    public const int SIZE = 128;


    private UInt128 id;

    private UInt128 debitsPending;

    private UInt128 debitsPosted;

    private UInt128 creditsPending;

    private UInt128 creditsPosted;

    private UInt128 userData128;

    private ulong userData64;

    private uint userData32;

    private uint reserved;

    private uint ledger;

    private ushort code;

    private AccountFlags flags;

    private ulong timestamp;

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#id
    /// </summary>
    public UInt128 Id { get => id; set => id = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#debits_pending
    /// </summary>
    public UInt128 DebitsPending { get => debitsPending; internal set => debitsPending = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#debits_posted
    /// </summary>
    public UInt128 DebitsPosted { get => debitsPosted; internal set => debitsPosted = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#credits_pending
    /// </summary>
    public UInt128 CreditsPending { get => creditsPending; internal set => creditsPending = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#credits_posted
    /// </summary>
    public UInt128 CreditsPosted { get => creditsPosted; internal set => creditsPosted = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#user_data_128
    /// </summary>
    public UInt128 UserData128 { get => userData128; set => userData128 = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#user_data_64
    /// </summary>
    public ulong UserData64 { get => userData64; set => userData64 = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#user_data_32
    /// </summary>
    public uint UserData32 { get => userData32; set => userData32 = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#reserved
    /// </summary>
    internal uint Reserved { get => reserved; set => reserved = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#ledger
    /// </summary>
    public uint Ledger { get => ledger; set => ledger = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#code
    /// </summary>
    public ushort Code { get => code; set => code = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#flags
    /// </summary>
    public AccountFlags Flags { get => flags; set => flags = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account#timestamp
    /// </summary>
    public ulong Timestamp { get => timestamp; set => timestamp = value; }

}

[StructLayout(LayoutKind.Sequential, Size = SIZE)]
public struct Transfer
{
    public const int SIZE = 128;

    public static UInt128 AmountMax => UInt128.MaxValue;

    private UInt128 id;

    private UInt128 debitAccountId;

    private UInt128 creditAccountId;

    private UInt128 amount;

    private UInt128 pendingId;

    private UInt128 userData128;

    private ulong userData64;

    private uint userData32;

    private uint timeout;

    private uint ledger;

    private ushort code;

    private TransferFlags flags;

    private ulong timestamp;

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#id
    /// </summary>
    public UInt128 Id { get => id; set => id = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#debit_account_id
    /// </summary>
    public UInt128 DebitAccountId { get => debitAccountId; set => debitAccountId = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#credit_account_id
    /// </summary>
    public UInt128 CreditAccountId { get => creditAccountId; set => creditAccountId = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#amount
    /// </summary>
    public UInt128 Amount { get => amount; set => amount = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#pending_id
    /// </summary>
    public UInt128 PendingId { get => pendingId; set => pendingId = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#user_data_128
    /// </summary>
    public UInt128 UserData128 { get => userData128; set => userData128 = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#user_data_64
    /// </summary>
    public ulong UserData64 { get => userData64; set => userData64 = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#user_data_32
    /// </summary>
    public uint UserData32 { get => userData32; set => userData32 = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#timeout
    /// </summary>
    public uint Timeout { get => timeout; set => timeout = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#ledger
    /// </summary>
    public uint Ledger { get => ledger; set => ledger = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#code
    /// </summary>
    public ushort Code { get => code; set => code = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#flags
    /// </summary>
    public TransferFlags Flags { get => flags; set => flags = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/transfer#timestamp
    /// </summary>
    public ulong Timestamp { get => timestamp; set => timestamp = value; }

}

public enum CreateAccountResult : uint
{
    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#ok
    /// </summary>
    Ok = 0,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#linked_event_failed
    /// </summary>
    LinkedEventFailed = 1,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#linked_event_chain_open
    /// </summary>
    LinkedEventChainOpen = 2,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#imported_event_expected
    /// </summary>
    ImportedEventExpected = 22,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#imported_event_not_expected
    /// </summary>
    ImportedEventNotExpected = 23,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#timestamp_must_be_zero
    /// </summary>
    TimestampMustBeZero = 3,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#imported_event_timestamp_out_of_range
    /// </summary>
    ImportedEventTimestampOutOfRange = 24,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#imported_event_timestamp_must_not_advance
    /// </summary>
    ImportedEventTimestampMustNotAdvance = 25,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#reserved_field
    /// </summary>
    ReservedField = 4,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#reserved_flag
    /// </summary>
    ReservedFlag = 5,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#id_must_not_be_zero
    /// </summary>
    IdMustNotBeZero = 6,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#id_must_not_be_int_max
    /// </summary>
    IdMustNotBeIntMax = 7,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#exists_with_different_flags
    /// </summary>
    ExistsWithDifferentFlags = 15,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#exists_with_different_user_data_128
    /// </summary>
    ExistsWithDifferentUserData128 = 16,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#exists_with_different_user_data_64
    /// </summary>
    ExistsWithDifferentUserData64 = 17,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#exists_with_different_user_data_32
    /// </summary>
    ExistsWithDifferentUserData32 = 18,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#exists_with_different_ledger
    /// </summary>
    ExistsWithDifferentLedger = 19,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#exists_with_different_code
    /// </summary>
    ExistsWithDifferentCode = 20,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#exists
    /// </summary>
    Exists = 21,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#flags_are_mutually_exclusive
    /// </summary>
    FlagsAreMutuallyExclusive = 8,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#debits_pending_must_be_zero
    /// </summary>
    DebitsPendingMustBeZero = 9,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#debits_posted_must_be_zero
    /// </summary>
    DebitsPostedMustBeZero = 10,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#credits_pending_must_be_zero
    /// </summary>
    CreditsPendingMustBeZero = 11,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#credits_posted_must_be_zero
    /// </summary>
    CreditsPostedMustBeZero = 12,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#ledger_must_not_be_zero
    /// </summary>
    LedgerMustNotBeZero = 13,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#code_must_not_be_zero
    /// </summary>
    CodeMustNotBeZero = 14,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_accounts#imported_event_timestamp_must_not_regress
    /// </summary>
    ImportedEventTimestampMustNotRegress = 26,

}

public enum CreateTransferResult : uint
{
    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#ok
    /// </summary>
    Ok = 0,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#linked_event_failed
    /// </summary>
    LinkedEventFailed = 1,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#linked_event_chain_open
    /// </summary>
    LinkedEventChainOpen = 2,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_expected
    /// </summary>
    ImportedEventExpected = 56,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_not_expected
    /// </summary>
    ImportedEventNotExpected = 57,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#timestamp_must_be_zero
    /// </summary>
    TimestampMustBeZero = 3,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_timestamp_out_of_range
    /// </summary>
    ImportedEventTimestampOutOfRange = 58,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_timestamp_must_not_advance
    /// </summary>
    ImportedEventTimestampMustNotAdvance = 59,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#reserved_flag
    /// </summary>
    ReservedFlag = 4,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#id_must_not_be_zero
    /// </summary>
    IdMustNotBeZero = 5,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#id_must_not_be_int_max
    /// </summary>
    IdMustNotBeIntMax = 6,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_flags
    /// </summary>
    ExistsWithDifferentFlags = 36,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_pending_id
    /// </summary>
    ExistsWithDifferentPendingId = 40,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_timeout
    /// </summary>
    ExistsWithDifferentTimeout = 44,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_debit_account_id
    /// </summary>
    ExistsWithDifferentDebitAccountId = 37,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_credit_account_id
    /// </summary>
    ExistsWithDifferentCreditAccountId = 38,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_amount
    /// </summary>
    ExistsWithDifferentAmount = 39,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_user_data_128
    /// </summary>
    ExistsWithDifferentUserData128 = 41,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_user_data_64
    /// </summary>
    ExistsWithDifferentUserData64 = 42,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_user_data_32
    /// </summary>
    ExistsWithDifferentUserData32 = 43,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_ledger
    /// </summary>
    ExistsWithDifferentLedger = 67,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_code
    /// </summary>
    ExistsWithDifferentCode = 45,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exists
    /// </summary>
    Exists = 46,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#id_already_failed
    /// </summary>
    IdAlreadyFailed = 68,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#flags_are_mutually_exclusive
    /// </summary>
    FlagsAreMutuallyExclusive = 7,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#debit_account_id_must_not_be_zero
    /// </summary>
    DebitAccountIdMustNotBeZero = 8,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#debit_account_id_must_not_be_int_max
    /// </summary>
    DebitAccountIdMustNotBeIntMax = 9,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#credit_account_id_must_not_be_zero
    /// </summary>
    CreditAccountIdMustNotBeZero = 10,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#credit_account_id_must_not_be_int_max
    /// </summary>
    CreditAccountIdMustNotBeIntMax = 11,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#accounts_must_be_different
    /// </summary>
    AccountsMustBeDifferent = 12,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_id_must_be_zero
    /// </summary>
    PendingIdMustBeZero = 13,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_id_must_not_be_zero
    /// </summary>
    PendingIdMustNotBeZero = 14,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_id_must_not_be_int_max
    /// </summary>
    PendingIdMustNotBeIntMax = 15,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_id_must_be_different
    /// </summary>
    PendingIdMustBeDifferent = 16,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#timeout_reserved_for_pending_transfer
    /// </summary>
    TimeoutReservedForPendingTransfer = 17,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#closing_transfer_must_be_pending
    /// </summary>
    ClosingTransferMustBePending = 64,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#ledger_must_not_be_zero
    /// </summary>
    LedgerMustNotBeZero = 19,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#code_must_not_be_zero
    /// </summary>
    CodeMustNotBeZero = 20,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#debit_account_not_found
    /// </summary>
    DebitAccountNotFound = 21,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#credit_account_not_found
    /// </summary>
    CreditAccountNotFound = 22,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#accounts_must_have_the_same_ledger
    /// </summary>
    AccountsMustHaveTheSameLedger = 23,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#transfer_must_have_the_same_ledger_as_accounts
    /// </summary>
    TransferMustHaveTheSameLedgerAsAccounts = 24,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_not_found
    /// </summary>
    PendingTransferNotFound = 25,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_not_pending
    /// </summary>
    PendingTransferNotPending = 26,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_has_different_debit_account_id
    /// </summary>
    PendingTransferHasDifferentDebitAccountId = 27,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_has_different_credit_account_id
    /// </summary>
    PendingTransferHasDifferentCreditAccountId = 28,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_has_different_ledger
    /// </summary>
    PendingTransferHasDifferentLedger = 29,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_has_different_code
    /// </summary>
    PendingTransferHasDifferentCode = 30,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exceeds_pending_transfer_amount
    /// </summary>
    ExceedsPendingTransferAmount = 31,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_has_different_amount
    /// </summary>
    PendingTransferHasDifferentAmount = 32,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_already_posted
    /// </summary>
    PendingTransferAlreadyPosted = 33,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_already_voided
    /// </summary>
    PendingTransferAlreadyVoided = 34,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_expired
    /// </summary>
    PendingTransferExpired = 35,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_timestamp_must_not_regress
    /// </summary>
    ImportedEventTimestampMustNotRegress = 60,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_timestamp_must_postdate_debit_account
    /// </summary>
    ImportedEventTimestampMustPostdateDebitAccount = 61,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_timestamp_must_postdate_credit_account
    /// </summary>
    ImportedEventTimestampMustPostdateCreditAccount = 62,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_timeout_must_be_zero
    /// </summary>
    ImportedEventTimeoutMustBeZero = 63,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#debit_account_already_closed
    /// </summary>
    DebitAccountAlreadyClosed = 65,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#credit_account_already_closed
    /// </summary>
    CreditAccountAlreadyClosed = 66,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_debits_pending
    /// </summary>
    OverflowsDebitsPending = 47,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_credits_pending
    /// </summary>
    OverflowsCreditsPending = 48,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_debits_posted
    /// </summary>
    OverflowsDebitsPosted = 49,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_credits_posted
    /// </summary>
    OverflowsCreditsPosted = 50,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_debits
    /// </summary>
    OverflowsDebits = 51,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_credits
    /// </summary>
    OverflowsCredits = 52,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_timeout
    /// </summary>
    OverflowsTimeout = 53,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exceeds_credits
    /// </summary>
    ExceedsCredits = 54,

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/requests/create_transfers#exceeds_debits
    /// </summary>
    ExceedsDebits = 55,

}

[StructLayout(LayoutKind.Sequential, Size = SIZE)]
public struct CreateAccountsResult
{
    public const int SIZE = 16;


    private ulong timestamp;

    private CreateAccountResult result;

    private uint reserved;

    public ulong Timestamp { get => timestamp; set => timestamp = value; }

    public CreateAccountResult Result { get => result; set => result = value; }

    internal uint Reserved { get => reserved; set => reserved = value; }

}

[StructLayout(LayoutKind.Sequential, Size = SIZE)]
public struct CreateTransfersResult
{
    public const int SIZE = 16;


    private ulong timestamp;

    private CreateTransferResult result;

    private uint reserved;

    public ulong Timestamp { get => timestamp; set => timestamp = value; }

    public CreateTransferResult Result { get => result; set => result = value; }

    internal uint Reserved { get => reserved; set => reserved = value; }

}

[StructLayout(LayoutKind.Sequential, Size = SIZE)]
public struct AccountFilter
{
    public const int SIZE = 128;


    [StructLayout(LayoutKind.Sequential, Size = ReservedData.SIZE)]
    private unsafe struct ReservedData
    {
        public const int SIZE = 58;
        private const int LENGTH = 58;

        private fixed byte raw[LENGTH];

        public byte[] GetData()
        {
            fixed (void* ptr = raw)
            {
                return new ReadOnlySpan<byte>(ptr, LENGTH).ToArray();
            }
        }

        public void SetData(byte[] value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            if (value.Length != LENGTH)
            {
                throw new ArgumentException(
                    "Expected a byte[" + LENGTH + "] array",
                    nameof(value));
            }

            fixed (void* ptr = raw)
            {
                value.CopyTo(new Span<byte>(ptr, LENGTH));
            }
        }
    }

    private UInt128 accountId;

    private UInt128 userData128;

    private ulong userData64;

    private uint userData32;

    private ushort code;

    private ReservedData reserved;

    private ulong timestampMin;

    private ulong timestampMax;

    private uint limit;

    private AccountFilterFlags flags;

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#account_id
    /// </summary>
    public UInt128 AccountId { get => accountId; set => accountId = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#user_data_128
    /// </summary>
    public UInt128 UserData128 { get => userData128; set => userData128 = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#user_data_64
    /// </summary>
    public ulong UserData64 { get => userData64; set => userData64 = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#user_data_32
    /// </summary>
    public uint UserData32 { get => userData32; set => userData32 = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#code
    /// </summary>
    public ushort Code { get => code; set => code = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#reserved
    /// </summary>
    internal byte[] Reserved { get => reserved.GetData(); set => reserved.SetData(value); }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#timestamp_min
    /// </summary>
    public ulong TimestampMin { get => timestampMin; set => timestampMin = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#timestamp_max
    /// </summary>
    public ulong TimestampMax { get => timestampMax; set => timestampMax = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#limit
    /// </summary>
    public uint Limit { get => limit; set => limit = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-filter#flags
    /// </summary>
    public AccountFilterFlags Flags { get => flags; set => flags = value; }

}

[StructLayout(LayoutKind.Sequential, Size = SIZE)]
public struct AccountBalance
{
    public const int SIZE = 128;


    [StructLayout(LayoutKind.Sequential, Size = ReservedData.SIZE)]
    private unsafe struct ReservedData
    {
        public const int SIZE = 56;
        private const int LENGTH = 56;

        private fixed byte raw[LENGTH];

        public byte[] GetData()
        {
            fixed (void* ptr = raw)
            {
                return new ReadOnlySpan<byte>(ptr, LENGTH).ToArray();
            }
        }

        public void SetData(byte[] value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            if (value.Length != LENGTH)
            {
                throw new ArgumentException(
                    "Expected a byte[" + LENGTH + "] array",
                    nameof(value));
            }

            fixed (void* ptr = raw)
            {
                value.CopyTo(new Span<byte>(ptr, LENGTH));
            }
        }
    }

    private UInt128 debitsPending;

    private UInt128 debitsPosted;

    private UInt128 creditsPending;

    private UInt128 creditsPosted;

    private ulong timestamp;

    private ReservedData reserved;

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-balances#debits_pending
    /// </summary>
    public UInt128 DebitsPending { get => debitsPending; set => debitsPending = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-balances#debits_posted
    /// </summary>
    public UInt128 DebitsPosted { get => debitsPosted; set => debitsPosted = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-balances#credits_pending
    /// </summary>
    public UInt128 CreditsPending { get => creditsPending; set => creditsPending = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-balances#credits_posted
    /// </summary>
    public UInt128 CreditsPosted { get => creditsPosted; set => creditsPosted = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-balances#timestamp
    /// </summary>
    public ulong Timestamp { get => timestamp; set => timestamp = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/account-balances#reserved
    /// </summary>
    internal byte[] Reserved { get => reserved.GetData(); set => reserved.SetData(value); }

}

[StructLayout(LayoutKind.Sequential, Size = SIZE)]
public struct QueryFilter
{
    public const int SIZE = 64;


    [StructLayout(LayoutKind.Sequential, Size = ReservedData.SIZE)]
    private unsafe struct ReservedData
    {
        public const int SIZE = 6;
        private const int LENGTH = 6;

        private fixed byte raw[LENGTH];

        public byte[] GetData()
        {
            fixed (void* ptr = raw)
            {
                return new ReadOnlySpan<byte>(ptr, LENGTH).ToArray();
            }
        }

        public void SetData(byte[] value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            if (value.Length != LENGTH)
            {
                throw new ArgumentException(
                    "Expected a byte[" + LENGTH + "] array",
                    nameof(value));
            }

            fixed (void* ptr = raw)
            {
                value.CopyTo(new Span<byte>(ptr, LENGTH));
            }
        }
    }

    private UInt128 userData128;

    private ulong userData64;

    private uint userData32;

    private uint ledger;

    private ushort code;

    private ReservedData reserved;

    private ulong timestampMin;

    private ulong timestampMax;

    private uint limit;

    private QueryFilterFlags flags;

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/query-filter#user_data_128
    /// </summary>
    public UInt128 UserData128 { get => userData128; set => userData128 = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/query-filter#user_data_64
    /// </summary>
    public ulong UserData64 { get => userData64; set => userData64 = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/query-filter#user_data_32
    /// </summary>
    public uint UserData32 { get => userData32; set => userData32 = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/query-filter#ledger
    /// </summary>
    public uint Ledger { get => ledger; set => ledger = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/query-filter#code
    /// </summary>
    public ushort Code { get => code; set => code = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/query-filter#reserved
    /// </summary>
    internal byte[] Reserved { get => reserved.GetData(); set => reserved.SetData(value); }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/query-filter#timestamp_min
    /// </summary>
    public ulong TimestampMin { get => timestampMin; set => timestampMin = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/query-filter#timestamp_max
    /// </summary>
    public ulong TimestampMax { get => timestampMax; set => timestampMax = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/query-filter#limit
    /// </summary>
    public uint Limit { get => limit; set => limit = value; }

    /// <summary>
    /// https://docs.tigerbeetle.com/reference/query-filter#flags
    /// </summary>
    public QueryFilterFlags Flags { get => flags; set => flags = value; }

}

public enum InitializationStatus : uint
{
    Success = 0,

    Unexpected = 1,

    OutOfMemory = 2,

    AddressInvalid = 3,

    AddressLimitExceeded = 4,

    SystemResources = 5,

    NetworkSubsystem = 6,

}

internal enum ClientStatus : uint
{
    Ok = 0,

    Invalid = 1,

}

public enum PacketStatus : byte
{
    Ok = 0,

    TooMuchData = 1,

    ClientEvicted = 2,

    ClientReleaseTooLow = 3,

    ClientReleaseTooHigh = 4,

    ClientShutdown = 5,

    InvalidOperation = 6,

    InvalidDataSize = 7,

}

internal enum TBOperation : byte
{
    Pulse = 128,

    GetChangeEvents = 137,

    LookupAccounts = 140,

    LookupTransfers = 141,

    GetAccountTransfers = 142,

    GetAccountBalances = 143,

    QueryAccounts = 144,

    QueryTransfers = 145,

    CreateAccountsWithResults = 146,

    CreateTransfersWithResults = 147,

}

[StructLayout(LayoutKind.Sequential, Size = SIZE)]
internal unsafe struct TBClient
{
    public const int SIZE = 32;


    [StructLayout(LayoutKind.Sequential, Size = OpaqueData.SIZE)]
    private unsafe struct OpaqueData
    {
        public const int SIZE = 32;
        private const int LENGTH = 4;

        private fixed ulong raw[LENGTH];

        public ulong[] GetData()
        {
            fixed (void* ptr = raw)
            {
                return new ReadOnlySpan<ulong>(ptr, LENGTH).ToArray();
            }
        }

        public void SetData(ulong[] value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            if (value.Length != LENGTH)
            {
                throw new ArgumentException(
                    "Expected a ulong[" + LENGTH + "] array",
                    nameof(value));
            }

            fixed (void* ptr = raw)
            {
                value.CopyTo(new Span<ulong>(ptr, LENGTH));
            }
        }
    }

    private OpaqueData opaque;

}

[StructLayout(LayoutKind.Sequential, Size = SIZE)]
internal unsafe struct TBPacket
{
    public const int SIZE = 88;


    [StructLayout(LayoutKind.Sequential, Size = OpaqueData.SIZE)]
    private unsafe struct OpaqueData
    {
        public const int SIZE = 64;
        private const int LENGTH = 64;

        private fixed byte raw[LENGTH];

        public byte[] GetData()
        {
            fixed (void* ptr = raw)
            {
                return new ReadOnlySpan<byte>(ptr, LENGTH).ToArray();
            }
        }

        public void SetData(byte[] value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            if (value.Length != LENGTH)
            {
                throw new ArgumentException(
                    "Expected a byte[" + LENGTH + "] array",
                    nameof(value));
            }

            fixed (void* ptr = raw)
            {
                value.CopyTo(new Span<byte>(ptr, LENGTH));
            }
        }
    }

    public IntPtr userData;

    public IntPtr data;

    public uint dataSize;

    public ushort userTag;

    public byte operation;

    public PacketStatus status;

    private OpaqueData opaque;

}

internal static class Native
{
    private const string LIB_NAME = "tb_client";

    [DllImport(LIB_NAME, CallingConvention = CallingConvention.Cdecl)]
    public static unsafe extern InitializationStatus tb_client_init(
        TBClient* client_out,
        UInt128Extensions.UnsafeU128* cluster_id,
        byte* address_ptr,
        uint address_len,
        IntPtr completion_ctx,
        delegate* unmanaged[Cdecl]<IntPtr,
                                   TBPacket*, ulong,
                                   byte*, uint, void> completion_callback
    );

    [DllImport(LIB_NAME, CallingConvention = CallingConvention.Cdecl)]
    public static unsafe extern InitializationStatus tb_client_init_echo(
        TBClient* out_client,
        UInt128Extensions.UnsafeU128* cluster_id,
        byte* address_ptr,
        uint address_len,
        IntPtr completion_ctx,
        delegate* unmanaged[Cdecl]<IntPtr,
                                   TBPacket*, ulong,
                                   byte*, uint, void> completion_callback
    );

    [DllImport(LIB_NAME, CallingConvention = CallingConvention.Cdecl)]
    public static unsafe extern ClientStatus tb_client_submit(
        TBClient* client,
        TBPacket* packet
    );

    [DllImport(LIB_NAME, CallingConvention = CallingConvention.Cdecl)]
    public static unsafe extern ClientStatus tb_client_deinit(
        TBClient* client
    );
}

