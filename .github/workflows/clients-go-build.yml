name: "clients/go: Build"

on:
  # Run CI against any commits pushed to 'main', as well as 'staging' and 'trying' for bors.
  push:
    branches:
      - 'main'
      - 'staging'
      - 'trying'
  # Run CI for any PRs that target 'main' when they are opened or updated.
  pull_request:
    branches:
      - 'main'
    types:
      - opened
      - synchronize

jobs:
  shellcheck_scripts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: ./scripts/shellcheck.sh
        working-directory: ./src/clients/go

  binaries:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: ./scripts/install_zig.sh
      - run: ./zig/zig build go_client -Drelease-safe

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: go-binaries
          path: src/clients/go/pkg/native

  tests:
    needs: binaries
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: go-binaries
          path: src/clients/go/pkg/native
      - run: ./scripts/install.sh
      - run: go test ./...
        working-directory: ./src/clients/go

  # TODO: Windows exit codes broken
  tests_windows:
    needs: binaries
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: go-binaries
          path: src/clients/go/pkg/native
      - run: ./scripts/install.bat
      - run: ./zgo.bat test ./...
        working-directory: ./src/clients/go

  build_sample:
    needs: binaries
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: go-binaries
          path: src/clients/go/pkg/native
      - run: go build
        working-directory: ./src/clients/go/samples/basic

  build_sample_windows:
    needs: binaries
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: go-binaries
          path: src/clients/go/pkg/native
      - run: ../../zgo.bat build
        working-directory: ./src/clients/go/samples/basic

  upload:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: [shellcheck_scripts, binaries, tests, tests_windows, build_sample, build_sample_windows]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/clients/go
    steps:
      - uses: actions/checkout@v3
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: go-binaries
          path: src/clients/go/pkg/native
      - run: mkdir ~/.ssh && echo -e "${{ secrets.TIGERBEETLE_GO_DEPLOY_KEY }}" > ~/.ssh/id_ed25519 && chmod 600 ~/.ssh/id_ed25519
      - run: git clone --no-checkout git@github.com:tigerbeetledb/tigerbeetle-go.git ~/tigerbeetle-go && cp -R . ~/tigerbeetle-go
      - run: echo -e "# tigerbeetle-go\nThis repo has been automatically generated from [tigerbeetledb/tigerbeetle@${{ github.sha }}](https://github.com/tigerbeetledb/tigerbeetle/commit/${{ github.sha }}) to keep binary blobs out of the monorepo. Please see [https://github.com/tigerbeetledb/tigerbeetle/tree/main/src/clients/go](https://github.com/tigerbeetledb/tigerbeetle/tree/main/src/clients/go) for documentation and contributions." > ~/tigerbeetle-go/README.md
      - run: git config --global user.email "bot@tigerbeetle.com" && git config --global user.name "TigerBeetle Bot"
      - run: cd ~/tigerbeetle-go && git add . && git add -f pkg
      - run: cd ~/tigerbeetle-go && git commit -m "Autogenerated commit from tigerbeetledb/tigerbeetle@${{ github.sha }}" && git tag tigerbeetle-${{ github.sha }}
      - run: cd ~/tigerbeetle-go && git push origin main && git push origin tigerbeetle-${{ github.sha }}

  bors_clients_go:
    name: bors/clients/go
    needs:
      - shellcheck_scripts
      - binaries
      - tests
      - tests_windows
      - build_sample
      - build_sample_windows
    runs-on: ubuntu-latest
    steps:
      - name: CI succeeded
        working-directory: ./
        run: exit 0
