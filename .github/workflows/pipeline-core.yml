name: Core Pipeline

concurrency:
  group: core-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  # Run on Merge queue
  merge_group:

  # Run CI for any PRs that target 'main' when they are opened or updated.
  pull_request:
    branches:
      - 'main'
    types:
      - opened
      - synchronize

  workflow_call:

jobs:
  #smoke:
  # uses: ./.github/workflows/smoke.yml

  #linux:
  # uses: ./.github/workflows/linux.yml

  clients:
    uses: ./.github/workflows/clients.yml

  # Work around GitHub considering Skipped jobs success for "Require status checks before merging"
  # See also:
  # https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches#require-status-checks-before-merging
  # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
  core-pipeline:
    if: always()
    needs:
      #- smoke
      #- linux
      - clients

    runs-on: ubuntu-latest
    steps:
      - name: All Core CI Jobs Passed
        if: needs.clients.result == 'success'
        #if: needs.smoke.result == 'success' && needs.linux.result == 'success' && needs.clients.result == 'success'
        working-directory: ./
        run: exit 0

      - name: A Core CI Job Failed
        if: needs.clients.result != 'success'
        #if: needs.smoke.result != 'success' || needs.linux.result != 'success' || needs.clients.result != 'success'
        working-directory: ./
        run: exit 1
