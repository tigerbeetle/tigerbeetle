//////////////////////////////////////////////////////////
// This file was auto-generated by java_bindings.zig
// Do not manually modify.
//////////////////////////////////////////////////////////

package com.tigerbeetle;

public enum CreateTransferStatus {

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#created">created</a>
     */
    Created((int) 0),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#linked_event_failed">linked_event_failed</a>
     */
    LinkedEventFailed((int) 1),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#linked_event_chain_open">linked_event_chain_open</a>
     */
    LinkedEventChainOpen((int) 2),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_expected">imported_event_expected</a>
     */
    ImportedEventExpected((int) 56),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_not_expected">imported_event_not_expected</a>
     */
    ImportedEventNotExpected((int) 57),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#timestamp_must_be_zero">timestamp_must_be_zero</a>
     */
    TimestampMustBeZero((int) 3),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_timestamp_out_of_range">imported_event_timestamp_out_of_range</a>
     */
    ImportedEventTimestampOutOfRange((int) 58),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_timestamp_must_not_advance">imported_event_timestamp_must_not_advance</a>
     */
    ImportedEventTimestampMustNotAdvance((int) 59),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#reserved_flag">reserved_flag</a>
     */
    ReservedFlag((int) 4),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#id_must_not_be_zero">id_must_not_be_zero</a>
     */
    IdMustNotBeZero((int) 5),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#id_must_not_be_int_max">id_must_not_be_int_max</a>
     */
    IdMustNotBeIntMax((int) 6),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_flags">exists_with_different_flags</a>
     */
    ExistsWithDifferentFlags((int) 36),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_pending_id">exists_with_different_pending_id</a>
     */
    ExistsWithDifferentPendingId((int) 40),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_timeout">exists_with_different_timeout</a>
     */
    ExistsWithDifferentTimeout((int) 44),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_debit_account_id">exists_with_different_debit_account_id</a>
     */
    ExistsWithDifferentDebitAccountId((int) 37),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_credit_account_id">exists_with_different_credit_account_id</a>
     */
    ExistsWithDifferentCreditAccountId((int) 38),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_amount">exists_with_different_amount</a>
     */
    ExistsWithDifferentAmount((int) 39),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_user_data_128">exists_with_different_user_data_128</a>
     */
    ExistsWithDifferentUserData128((int) 41),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_user_data_64">exists_with_different_user_data_64</a>
     */
    ExistsWithDifferentUserData64((int) 42),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_user_data_32">exists_with_different_user_data_32</a>
     */
    ExistsWithDifferentUserData32((int) 43),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_ledger">exists_with_different_ledger</a>
     */
    ExistsWithDifferentLedger((int) 67),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exists_with_different_code">exists_with_different_code</a>
     */
    ExistsWithDifferentCode((int) 45),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exists">exists</a>
     */
    Exists((int) 46),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#id_already_failed">id_already_failed</a>
     */
    IdAlreadyFailed((int) 68),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#flags_are_mutually_exclusive">flags_are_mutually_exclusive</a>
     */
    FlagsAreMutuallyExclusive((int) 7),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#debit_account_id_must_not_be_zero">debit_account_id_must_not_be_zero</a>
     */
    DebitAccountIdMustNotBeZero((int) 8),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#debit_account_id_must_not_be_int_max">debit_account_id_must_not_be_int_max</a>
     */
    DebitAccountIdMustNotBeIntMax((int) 9),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#credit_account_id_must_not_be_zero">credit_account_id_must_not_be_zero</a>
     */
    CreditAccountIdMustNotBeZero((int) 10),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#credit_account_id_must_not_be_int_max">credit_account_id_must_not_be_int_max</a>
     */
    CreditAccountIdMustNotBeIntMax((int) 11),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#accounts_must_be_different">accounts_must_be_different</a>
     */
    AccountsMustBeDifferent((int) 12),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_id_must_be_zero">pending_id_must_be_zero</a>
     */
    PendingIdMustBeZero((int) 13),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_id_must_not_be_zero">pending_id_must_not_be_zero</a>
     */
    PendingIdMustNotBeZero((int) 14),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_id_must_not_be_int_max">pending_id_must_not_be_int_max</a>
     */
    PendingIdMustNotBeIntMax((int) 15),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_id_must_be_different">pending_id_must_be_different</a>
     */
    PendingIdMustBeDifferent((int) 16),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#timeout_reserved_for_pending_transfer">timeout_reserved_for_pending_transfer</a>
     */
    TimeoutReservedForPendingTransfer((int) 17),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#closing_transfer_must_be_pending">closing_transfer_must_be_pending</a>
     */
    ClosingTransferMustBePending((int) 64),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#ledger_must_not_be_zero">ledger_must_not_be_zero</a>
     */
    LedgerMustNotBeZero((int) 19),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#code_must_not_be_zero">code_must_not_be_zero</a>
     */
    CodeMustNotBeZero((int) 20),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#debit_account_not_found">debit_account_not_found</a>
     */
    DebitAccountNotFound((int) 21),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#credit_account_not_found">credit_account_not_found</a>
     */
    CreditAccountNotFound((int) 22),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#accounts_must_have_the_same_ledger">accounts_must_have_the_same_ledger</a>
     */
    AccountsMustHaveTheSameLedger((int) 23),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#transfer_must_have_the_same_ledger_as_accounts">transfer_must_have_the_same_ledger_as_accounts</a>
     */
    TransferMustHaveTheSameLedgerAsAccounts((int) 24),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_not_found">pending_transfer_not_found</a>
     */
    PendingTransferNotFound((int) 25),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_not_pending">pending_transfer_not_pending</a>
     */
    PendingTransferNotPending((int) 26),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_has_different_debit_account_id">pending_transfer_has_different_debit_account_id</a>
     */
    PendingTransferHasDifferentDebitAccountId((int) 27),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_has_different_credit_account_id">pending_transfer_has_different_credit_account_id</a>
     */
    PendingTransferHasDifferentCreditAccountId((int) 28),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_has_different_ledger">pending_transfer_has_different_ledger</a>
     */
    PendingTransferHasDifferentLedger((int) 29),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_has_different_code">pending_transfer_has_different_code</a>
     */
    PendingTransferHasDifferentCode((int) 30),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exceeds_pending_transfer_amount">exceeds_pending_transfer_amount</a>
     */
    ExceedsPendingTransferAmount((int) 31),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_has_different_amount">pending_transfer_has_different_amount</a>
     */
    PendingTransferHasDifferentAmount((int) 32),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_already_posted">pending_transfer_already_posted</a>
     */
    PendingTransferAlreadyPosted((int) 33),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_already_voided">pending_transfer_already_voided</a>
     */
    PendingTransferAlreadyVoided((int) 34),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#pending_transfer_expired">pending_transfer_expired</a>
     */
    PendingTransferExpired((int) 35),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_timestamp_must_not_regress">imported_event_timestamp_must_not_regress</a>
     */
    ImportedEventTimestampMustNotRegress((int) 60),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_timestamp_must_postdate_debit_account">imported_event_timestamp_must_postdate_debit_account</a>
     */
    ImportedEventTimestampMustPostdateDebitAccount((int) 61),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_timestamp_must_postdate_credit_account">imported_event_timestamp_must_postdate_credit_account</a>
     */
    ImportedEventTimestampMustPostdateCreditAccount((int) 62),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#imported_event_timeout_must_be_zero">imported_event_timeout_must_be_zero</a>
     */
    ImportedEventTimeoutMustBeZero((int) 63),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#debit_account_already_closed">debit_account_already_closed</a>
     */
    DebitAccountAlreadyClosed((int) 65),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#credit_account_already_closed">credit_account_already_closed</a>
     */
    CreditAccountAlreadyClosed((int) 66),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_debits_pending">overflows_debits_pending</a>
     */
    OverflowsDebitsPending((int) 47),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_credits_pending">overflows_credits_pending</a>
     */
    OverflowsCreditsPending((int) 48),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_debits_posted">overflows_debits_posted</a>
     */
    OverflowsDebitsPosted((int) 49),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_credits_posted">overflows_credits_posted</a>
     */
    OverflowsCreditsPosted((int) 50),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_debits">overflows_debits</a>
     */
    OverflowsDebits((int) 51),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_credits">overflows_credits</a>
     */
    OverflowsCredits((int) 52),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#overflows_timeout">overflows_timeout</a>
     */
    OverflowsTimeout((int) 53),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exceeds_credits">exceeds_credits</a>
     */
    ExceedsCredits((int) 54),

    /**
     * @see <a href="https://docs.tigerbeetle.com/reference/requests/create_transfers#exceeds_debits">exceeds_debits</a>
     */
    ExceedsDebits((int) 55);

    public final int value;

    CreateTransferStatus(int value) {
        this.value = value;
    }

    public static CreateTransferStatus fromValue(int value) {
        switch (value) {
            case 0: return Created;
            case 1: return LinkedEventFailed;
            case 2: return LinkedEventChainOpen;
            case 56: return ImportedEventExpected;
            case 57: return ImportedEventNotExpected;
            case 3: return TimestampMustBeZero;
            case 58: return ImportedEventTimestampOutOfRange;
            case 59: return ImportedEventTimestampMustNotAdvance;
            case 4: return ReservedFlag;
            case 5: return IdMustNotBeZero;
            case 6: return IdMustNotBeIntMax;
            case 36: return ExistsWithDifferentFlags;
            case 40: return ExistsWithDifferentPendingId;
            case 44: return ExistsWithDifferentTimeout;
            case 37: return ExistsWithDifferentDebitAccountId;
            case 38: return ExistsWithDifferentCreditAccountId;
            case 39: return ExistsWithDifferentAmount;
            case 41: return ExistsWithDifferentUserData128;
            case 42: return ExistsWithDifferentUserData64;
            case 43: return ExistsWithDifferentUserData32;
            case 67: return ExistsWithDifferentLedger;
            case 45: return ExistsWithDifferentCode;
            case 46: return Exists;
            case 68: return IdAlreadyFailed;
            case 7: return FlagsAreMutuallyExclusive;
            case 8: return DebitAccountIdMustNotBeZero;
            case 9: return DebitAccountIdMustNotBeIntMax;
            case 10: return CreditAccountIdMustNotBeZero;
            case 11: return CreditAccountIdMustNotBeIntMax;
            case 12: return AccountsMustBeDifferent;
            case 13: return PendingIdMustBeZero;
            case 14: return PendingIdMustNotBeZero;
            case 15: return PendingIdMustNotBeIntMax;
            case 16: return PendingIdMustBeDifferent;
            case 17: return TimeoutReservedForPendingTransfer;
            case 64: return ClosingTransferMustBePending;
            case 19: return LedgerMustNotBeZero;
            case 20: return CodeMustNotBeZero;
            case 21: return DebitAccountNotFound;
            case 22: return CreditAccountNotFound;
            case 23: return AccountsMustHaveTheSameLedger;
            case 24: return TransferMustHaveTheSameLedgerAsAccounts;
            case 25: return PendingTransferNotFound;
            case 26: return PendingTransferNotPending;
            case 27: return PendingTransferHasDifferentDebitAccountId;
            case 28: return PendingTransferHasDifferentCreditAccountId;
            case 29: return PendingTransferHasDifferentLedger;
            case 30: return PendingTransferHasDifferentCode;
            case 31: return ExceedsPendingTransferAmount;
            case 32: return PendingTransferHasDifferentAmount;
            case 33: return PendingTransferAlreadyPosted;
            case 34: return PendingTransferAlreadyVoided;
            case 35: return PendingTransferExpired;
            case 60: return ImportedEventTimestampMustNotRegress;
            case 61: return ImportedEventTimestampMustPostdateDebitAccount;
            case 62: return ImportedEventTimestampMustPostdateCreditAccount;
            case 63: return ImportedEventTimeoutMustBeZero;
            case 65: return DebitAccountAlreadyClosed;
            case 66: return CreditAccountAlreadyClosed;
            case 47: return OverflowsDebitsPending;
            case 48: return OverflowsCreditsPending;
            case 49: return OverflowsDebitsPosted;
            case 50: return OverflowsCreditsPosted;
            case 51: return OverflowsDebits;
            case 52: return OverflowsCredits;
            case 53: return OverflowsTimeout;
            case 54: return ExceedsCredits;
            case 55: return ExceedsDebits;
            default: throw new IllegalArgumentException(
                String.format("Invalid CreateTransferStatus value=%d", value));
        }
    }
}

